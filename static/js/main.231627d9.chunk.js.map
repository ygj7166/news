{"version":3,"sources":["components/NewsItem.js","components/NewsList.js","components/Categories.js","App.js","reportWebVitals.js","index.js"],"names":["NewsItemBlock","styled","div","NewsItem","article","title","description","url","urlToImage","publishedAt","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","useState","articles","setArticles","loading","setLoading","useEffect","fetchData","a","query","axios","get","response","data","console","log","map","categories","name","text","BlackBlock","CategoriesBlock","Category","props","active","css","Categories","onSelect","c","onClick","App","setCategory","useCallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231627d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NewsItemBlock = styled.div`\r\n  display: flex;\r\n  .thumbnail {\r\n    margin-right: 1rem;\r\n    img {\r\n      display: block;\r\n      width: 280px;\r\n      height: 175px;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  .contents {\r\n    h2 {\r\n      margin: 0;\r\n      a {\r\n        color: black;\r\n        text-decoration: none;\r\n      }\r\n    }\r\n    p {\r\n      margin: 0;\r\n      line-height: 1.5;\r\n      /* margin-left: 0.5rem; */\r\n      white-space: normal;\r\n    }\r\n  }\r\n  & + & {\r\n    margin-top: 2.5rem;\r\n  }\r\n  .blank {\r\n    margin-top: 0.5rem;\r\n  }\r\n  .at {\r\n    float: right;\r\n    padding-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst NewsItem = ({ article }) => {\r\n  const { title, description, url, urlToImage, publishedAt } = article;\r\n  return (\r\n    <NewsItemBlock>\r\n      {urlToImage && (\r\n        <div className=\"thumbnail\">\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={urlToImage} alt=\"thumbnail\" />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"contents\">\r\n        <h2>\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </h2>\r\n      <div className=\"blank\"></div>\r\n        <p>{description}</p>\r\n        <p className=\"at\">{publishedAt}</p>\r\n      </div>\r\n    </NewsItemBlock>\r\n  );\r\n};\r\n\r\nexport default NewsItem;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport NewsItem from './NewsItem.js';\r\nimport axios from 'axios';\r\n\r\nconst NewsListBlock = styled.div`\r\n  box-sizing: border-box;\r\n  padding-bottom: 3rem;\r\n  width: 1080px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 1130px) {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst NewsList = ({ category }) => {\r\n  const [articles, setArticles] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // async를 사용하는 함수 따로 선언\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // 현재 category 값이 무엇인지에 따라 요청할 주소가 동적으로 바뀌고 있습니다.\r\n        // category 값이 all이라면 query 값을 공백으로 설정하고,\r\n        // all이 아니라면 \"&category=카테고리\" 형태를 만들도록 했습니다.\r\n        // 그리고 이 query를 요청할 때 주소에 포함시켜 주었습니다.\r\n\r\n        const query = category === 'all' ? '' : `&category=${category}`; \r\n        const response = await axios.get(\r\n          `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=eb44b2236d7d425e9a02e7a413d7efc0`,\r\n        );\r\n        setArticles(response.data.articles);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [category]);\r\n\r\n\r\n  if (loading) {\r\n    return <NewsListBlock>불러오는 중</NewsListBlock>;\r\n  }\r\n\r\n  if (!articles) {\r\n    // map 함수를 사용하기 전에 해당값이 null인지 확인하자\r\n    // 이 작업을 하지 않으면, 아직 데이터가 없을 때 null에는\r\n    // map 함수가 없기 때문에 렌더링 과정에서 오류난다.\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NewsListBlock>\r\n      {articles.map(article => (\r\n        <NewsItem key={article.url} article={article} />\r\n      ))}\r\n    </NewsListBlock>\r\n  );\r\n};\r\n\r\nexport default NewsList;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'all',\r\n    text: '전체보기',\r\n  },\r\n  {\r\n    name: 'business',\r\n    text: '비즈니스',\r\n  },\r\n  {\r\n    name: 'entertainment',\r\n    text: '엔터테인먼트',\r\n  },\r\n  {\r\n    name: 'health',\r\n    text: '건강',\r\n  },\r\n  {\r\n    name: 'science',\r\n    text: '과학',\r\n  },\r\n  {\r\n    name: 'sports',\r\n    text: '스포츠',\r\n  },\r\n  {\r\n    name: 'technology',\r\n    text: '기술',\r\n  },\r\n];\r\n\r\nconst BlackBlock = styled.div`\r\n  width: 100%;\r\n  background-color: black;\r\n  position: fixed;\r\n`;\r\n\r\nconst CategoriesBlock = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n\tcolor: white;\r\n  padding: 1rem 1rem 1rem 0;\r\n  width: 1080px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 1130px) {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Category = styled.div`\r\n  /* margin: 0 auto; */\r\n  font-size: 1.125rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n\t\r\n  &:hover {\r\n    /* color: #495057; */\r\n\t\tcolor: #22b8cf;\r\n  }\r\n\r\n  ${props =>\r\n    props.active &&\r\n    css`\r\n      font-weight: 600;\t\r\n      border-bottom: 2px solid #22b8cf;\r\n      &:hover {\r\n        color: #3bc9db;\r\n      }\r\n    `}\r\n\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Categories = ({ onSelect, category }) => {\r\n  return (\r\n    <BlackBlock>\r\n    <CategoriesBlock>\r\n      {categories.map(c => (\r\n        <Category\r\n          key={c.name}\r\n          active={category === c.name}\r\n          onClick={() => onSelect(c.name)}\r\n        >\r\n          {c.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n    </BlackBlock>\r\n  );\r\n};\r\n\r\nexport default Categories;","import React, { useState, useCallback } from 'react';\nimport NewsList from './components/NewsList';\nimport Categories from './components/Categories.js';\n\nconst App = () => {\n  const [category, setCategory] = useState('all');\n  const onSelect = useCallback(category => {\n    setCategory(category);\n  }, []);\n\n  return (\n    <>\n      <Categories category={category} onSelect={onSelect} />\n      <br/><br/><br/><br/>\n      <NewsList category={category} />\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}